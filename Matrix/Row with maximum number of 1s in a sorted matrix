//1. Get index of leftmost '1' in first row.
//2. For every row encountered, If element left to leftmost '1' is a zero, we do nothing.
//3. For every row encountered, If element left to leftmost '1' is a one, Update leftmost '1' index and max_row index to current row.



public static int Max_1_ROW (int A[][])
    {
        int RowNumber = A.length;
        int ColNumber = A[0].length;
        
        int LeftMost_1 = ColNumber - 1;
        int Max_row_index = -1;
        
        //(1.) Getting index of LeftMost '1' in first row.
        for(int row=0 ; row<RowNumber ; row++)
        {
            // Moving left till a '0' is found. 
            while(LeftMost_1>=0 && A[row][LeftMost_1]==1)
            {
                //(3.) Moving LeftMost pointer to left when a '1' is discovered.
                LeftMost_1--;
                
                // Updating Max_row_index to current row.
                Max_row_index = row;
            }
        }
        
        return Max_row_index;
    }